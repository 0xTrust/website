<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tony (Yihan) Xu 徐毅涵</title>
    <link>https://tonyxu.io/posts/</link>
    <description>Recent content in Posts on Tony (Yihan) Xu 徐毅涵</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 04 Jul 2018 14:05:42 -0700</lastBuildDate>
    
	<atom:link href="https://tonyxu.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>入职LinkedIn一个月总结</title>
      <link>https://tonyxu.io/posts/%E5%85%A5%E8%81%8Clinkedin%E4%B8%80%E4%B8%AA%E6%9C%88%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 04 Jul 2018 14:05:42 -0700</pubDate>
      
      <guid>https://tonyxu.io/posts/%E5%85%A5%E8%81%8Clinkedin%E4%B8%80%E4%B8%AA%E6%9C%88%E6%80%BB%E7%BB%93/</guid>
      <description>今天入职LinkedIn一个月了，这一个月过的非常快，第一周培训，第二周InDay，第三周预备放假，第四周放一周假，所以事实上工作的时间远不到一个月。
这一个月最主要的任务就是熟悉公司的技术、工具、流程和自己组的产品，中间还参加了不少内部的会。虽然第一个月不太可能有多亮眼的表现，但是还是应该总结一下。
自己觉得表现好的地方：
 对公司的技术和工具可以很快掌握 能发现现存问题并快速作出修复 对工作进度有计划  觉得有挑战的地方：
 自然流畅的和美国人交谈工作和生活话题（组里没有中国人） 开会的时候觉得不够自信，很难参与讨论 和同事聊天的时候不够积极主动  其实我的情况相对于中国人来说相对比较普遍，技术上没有问题积极主动，但是社交方面比较欠缺，不能很好的口头表现自己。如果想改善这个问题，我想接下来的几个月可以从这几个方面入手：
 提前浏览会议议题，争取对其中一两个议题充分理解并有自己的见解（开会的时候可以参与讨论） 提前思考如何回答常见的社交问题（如上周末过的怎样，这周末什么安排等） 鼓励自己在回答完对方的问题后能主动提出问题，引导话题  </description>
    </item>
    
    <item>
      <title>REST API 设计面试</title>
      <link>https://tonyxu.io/posts/rest-api-%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Tue, 03 Jul 2018 22:00:00 +0000</pubDate>
      
      <guid>https://tonyxu.io/posts/rest-api-%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95/</guid>
      <description>下面是我在面试LinkedIn的过程中给自己总结的REST API设计方法和注意要点。希望对也在准备这方面面试的同学有帮助。
Principle  Self-describing Simple Safe  Clarification  (WHO) Identify users  Internal or External Roles (Developer, Admin, Customer, Support&amp;hellip;)  (HOW) Identify scenario, use cases (WHAT) What functionality or resource will be exposed by API Clarify and confirm above and continue to API design  Note:
 Don&amp;rsquo;t guess Don&amp;rsquo;t make things up  Design Flow  Determine what types of resources an API provides Determine the relationships between resources Decide the resource name schemes based on types and relationships Decide the resource schemas Attach minimum set of methods to resources  API Design Design how to expose the functionality and resource</description>
    </item>
    
    <item>
      <title>提升工作中解决问题的能力</title>
      <link>https://tonyxu.io/posts/%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E4%B8%AD%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%83%BD%E5%8A%9B/</link>
      <pubDate>Tue, 03 Jul 2018 16:00:00 +0000</pubDate>
      
      <guid>https://tonyxu.io/posts/%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E4%B8%AD%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%83%BD%E5%8A%9B/</guid>
      <description>解决问题是工作中最必不可少的能力，因此需要思考:
 自己是否有在解决问题这个方面的能力有欠缺 如何才能提升这个能力  回想过去两年在Moxtra的工作经历，自己作为一个Solutions Engineer, 根本职能就是为客户解决问题。问题的模式无非是:
 我有A需求，你们有没有B解决方案实现这个需求  大部分情况下我会评估如下几个方面然后回答：
 我们是否有现成的解决方案 如果需要做支持，是否符合我们的产品定位和路线图 对公司营收影响大不大  如果其中任何一条不满足要求，我可能会直接拒绝这个需求。这么做看起来没什么问题，避免了公司产品为了第三方做太多不必要的妥协。但是仔细想，我作为Solution Engineer，在这当中可以做更多的事情。
比如:
 深入了解需求场景，确定是不是真的只有*需求A*才能解决问题 探索是否有其他解决方案可以作为work around  一定要带着解决问题的思维模式进行思考，而不是简单的做Yes/No判断，最后把不能解决问题的责任推给其他人/事。</description>
    </item>
    
    <item>
      <title>写在开头</title>
      <link>https://tonyxu.io/posts/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A4%B4/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://tonyxu.io/posts/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A4%B4/</guid>
      <description>今天决定建立这个博客，鼓励自己在生活和工作中多思考和总结。</description>
    </item>
    
  </channel>
</rss>