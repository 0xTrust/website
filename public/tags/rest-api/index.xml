<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest Api on Tony (Yihan) Xu 徐毅涵</title>
    <link>https://tonyxu.io/tags/rest-api/</link>
    <description>Recent content in Rest Api on Tony (Yihan) Xu 徐毅涵</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 03 Jul 2018 22:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tonyxu.io/tags/rest-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>REST API 设计面试</title>
      <link>https://tonyxu.io/posts/rest-api-%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Tue, 03 Jul 2018 22:00:00 +0000</pubDate>
      
      <guid>https://tonyxu.io/posts/rest-api-%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95/</guid>
      <description>下面是我在面试LinkedIn的过程中给自己总结的REST API设计方法和注意要点。希望对也在准备这方面面试的同学有帮助。
Principle  Self-describing Simple Safe  Clarification  (WHO) Identify users  Internal or External Roles (Developer, Admin, Customer, Support&amp;hellip;)  (HOW) Identify scenario, use cases (WHAT) What functionality or resource will be exposed by API Clarify and confirm above and continue to API design  Note:
 Don&amp;rsquo;t guess Don&amp;rsquo;t make things up  Design Flow  Determine what types of resources an API provides Determine the relationships between resources Decide the resource name schemes based on types and relationships Decide the resource schemas Attach minimum set of methods to resources  API Design Design how to expose the functionality and resource</description>
    </item>
    
  </channel>
</rss>